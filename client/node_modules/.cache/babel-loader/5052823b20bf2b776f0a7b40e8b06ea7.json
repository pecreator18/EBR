{"remainingRequest":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\src\\components\\Test.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\src\\components\\Test.vue","mtime":1561507463797},{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Computer\\\\Desktop\\\\Programming Work\\\\FULLSTACK_VUE_EXPRESS\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport esig from \"./Signature\";\nimport StepService from \"../StepServices\";\nexport default {\n  name: 'test',\n  props: ['steps[current_step].performed_by', 'steps[current_step].verified_by'],\n  components: {\n    esig: esig\n  },\n  data: function data() {\n    return {\n      br_selected: false,\n      batch_record_list: [],\n      wait: require('@/assets/Step Symbols/wait.jpg'),\n      step_symbols: [require('@/assets/Step Symbols/image001.png'), require('@/assets/Step Symbols/wait.jpg')],\n      step_symbol: '',\n      current_step: 0,\n      preview_counter: 0,\n      batch_record_length: 0,\n      batch_record: {},\n      step: {}\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return StepService.getBatchRecordList().then(function (res) {\n                return res;\n              });\n\n            case 3:\n              this.batch_record_list = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              this.error = _context.t0.message;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 6]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    loadBatchRecord: function () {\n      var _loadBatchRecord = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(lot_number) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return StepService.getBatchRecord(lot_number);\n\n              case 2:\n                this.batch_record = _context2.sent;\n                //Get the batch record from the database.\n                this.step = this.batch_record.steps[this.batch_record.current_step];\n                this.step_symbol = this.step_symbols[this.step.step_symbol];\n                this.batch_record_length = this.batch_record.steps.length;\n                this.br_selected = true;\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBatchRecord(_x) {\n        return _loadBatchRecord.apply(this, arguments);\n      }\n\n      return loadBatchRecord;\n    }(),\n    view_previous: function view_previous() {\n      if (this.batch_record.current_step > 0) {\n        this.batch_record.current_step = this.batch_record.current_step - 1;\n        this.preview_counter = this.preview_counter - 1;\n        this.step = this.batch_record.steps[this.batch_record.current_step];\n        this.step_symbol = this.step_symbols[this.step.step_symbol];\n      }\n    },\n    view_next: function view_next() {\n      if (this.batch_record.current_step < this.batch_record.steps.length - 1) {\n        this.batch_record.current_step = this.batch_record.current_step + 1;\n        this.preview_counter = this.preview_counter + 1;\n        this.step = this.batch_record.steps[this.batch_record.current_step];\n        this.step_symbol = this.step_symbols[this.step.step_symbol];\n      }\n    },\n    return_to_current: function return_to_current() {\n      this.batch_record.current_step = this.batch_record.current_step - this.preview_counter;\n      this.preview_counter = 0;\n      this.step = this.batch_record.steps[this.batch_record.current_step];\n      this.step_symbol = this.step_symbols[this.step.step_symbol];\n    },\n    performed: function performed(signature) {\n      //Need to figure out a way to ensure that the signature is there. Do it in the signature component.\n      if (signature.length > 50) {\n        this.step.performed_by = signature;\n        this.step.step_status = 'performed';\n      } else {\n        this.step.performed_by = null;\n        this.step.step_status = 'in-progress';\n      }\n    },\n    verified: function () {\n      var _verified = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(signature) {\n        var batch_record_step;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(signature.length > 2)) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                if (this.batch_record.current_step >= this.batch_record.steps.length - 1) {\n                  this.batch_record.batch_record_status = 'complete';\n                }\n\n                _context3.next = 4;\n                return signature;\n\n              case 4:\n                this.step.verified_by = _context3.sent;\n                _context3.next = 7;\n                return 'complete';\n\n              case 7:\n                this.step.step_status = _context3.sent;\n                batch_record_step = {\n                  lot_number: this.batch_record.lot_number,\n                  current_step: this.batch_record.current_step,\n                  batch_record_length: this.batch_record_length,\n                  batch_record_status: this.batch_record.batch_record_status,\n                  step: this.step\n                };\n                _context3.next = 11;\n                return StepService.updateBR(batch_record_step);\n\n              case 11:\n                _context3.next = 13;\n                return StepService.getBatchRecord(this.batch_record.lot_number);\n\n              case 13:\n                this.batch_record = _context3.sent;\n                this.step = this.batch_record.steps[this.batch_record.current_step];\n                this.step_symbol = this.step_symbols[this.step.step_symbol];\n                _context3.next = 19;\n                break;\n\n              case 18:\n                this.steps[this.current_step].verified_by = null;\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function verified(_x2) {\n        return _verified.apply(this, arguments);\n      }\n\n      return verified;\n    }(),\n    getURL: function getURL(url) {\n      var a = \"this.step_symbol.\".concat(url);\n      this.step_symbol = a;\n    }\n  },\n  computed: {}\n};",{"version":3,"sources":["Test.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<div class=\"test\">\r\n\t\t<div class=\"batch_record_select\" v-if = \"br_selected === false\">\r\n\t\t\t<h3 v-if = \"batch_record_list.length === 0\">NONE</h3>\r\n\t\t\t<h3 v-else>Pending Batch Record Lots</h3>\r\n\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t<li v-for = \"batch_record in batch_record_list\">\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<strong>Part Number: </strong>{{batch_record.part_number}}\r\n\t\t\t\t\t\t\t<strong>Lot Number: </strong>{{batch_record.lot_number}}\r\n\t\t\t\t\t\t\t<strong>Unit Operation: </strong>{{batch_record.unit_operation}}\r\n\t\t\t\t\t\t\t<strong>Description: </strong>{{batch_record.description}}\r\n\t\t\t\t\t\t\t<button class = \"\" id = \"\" v-on:click = \"loadBatchRecord(batch_record.lot_number)\">Start Batch Record</button>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t</ol>\r\n\t\t</div>\r\n\t\t<div class=\"batch_record\" v-if = \"br_selected\">\r\n\t\t\t<div class=\"container\" id = 'container'>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td class = \"step_title\">Batch Record Description</td>\r\n\t\t\t\t\t\t<td>  <strong>{{batch_record.description}}</strong></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t\t<br>\r\n\r\n\t\t<div class = \"operator_nav\">\r\n\t\t\t<table class = \"nav_buttons\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td class = \"nav_button_cell\">\r\n\t\t\t\t\t\t<button class = \"nav_button\" id = \"Previous\" v-on:click = \"view_previous\">Previous Step</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td class = \"nav_button_cell\">\r\n\t\t\t\t\t\t<button class = \"nav_button\" id = \"Next\" v-on:click = \" return_to_current\">Return to Current Step</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td class = \"nav_button_cell\">\r\n\t\t\t\t\t\t<button class = \"nav_button\" id = \"Next\" v-on:click = \" view_next\">Next Step</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t\t<br>\r\n\t\t<br>\r\n\t\t<div class=\"container\">\r\n\t\t<div id = \"step header\" class = \"step_header\">\r\n\t\t\t<table class = \"header_table\">\r\n\t\t\t<tr>\r\n\t\t\t\t<td id = \"step number\" class = \"step_number\">{{step.step_number}}</td>\r\n\t\t\t\t<td class = \"step_image\"><img id = \"step symbol\" :src = \"step_symbol\"></td>\r\n\t\t\t\t<td id = \"step title\"  class = \"step_title\">{{step.step_title}}</td>\r\n\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\r\n\t\t<div id = \"instructions\">\r\n\t\t\t<ol>\r\n\t\t\t\t<li v-for = \"instruction in step.step_instructions\"><p>{{instruction.instruction}}</p></li>\r\n\t\t\t</ol>\r\n\t\t</div>\r\n\r\n\t\t<h3>Step Data</h3>\r\n\r\n\t\t\t<div class = \"step_data\" id = \"step data\">\r\n\r\n\t\t\t\t<table class = 'data_table'>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t\t<th>Value</th>\r\n\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t<tr v-if = \"step.step_status === 'in-progress' \" v-for = \"data_input in step.step_data\">\r\n\t\t\t\t\t\t\t<td class = 'data_description'><label> {{data_input.process_component}}</label></td>\r\n\t\t\t\t\t\t\t<td class = 'data_entry'><input class = 'data_input'  type = 'text'  v-model = \"data_input.data\"></input></td>\r\n\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t<tr v-else >\r\n\t\t\t\t\t\t\t<td class = 'data_description'><label> {{data_input.process_component}}</label></td>\r\n\t\t\t\t\t\t\t<td class = 'data_entry'><input class = 'data_input'  type = 'text'  v-model = \"data_input.data\" disabled ></input></td>\r\n\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t</table>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<h3>Performed By and Verified By</h3>\r\n\t\t<div class= \"sign_off\" id = \"sign off\">\r\n\r\n\t\t<table class = \"signatures\">\r\n\t\t<tr>\r\n\t\t\t<td class = \"performer_verifier\">\r\n\t\t\t\t<label><strong>Performed By</strong></label>\r\n\t\t\t</td>\r\n\t\t\t<td  v-if = \"step.step_status === 'in-progress'\" class = \"data_entry\">\r\n\t\t\t\t<esig  class = \"data_input\" v-on:Singature_IMG = \"performed($event)\"></esig>\r\n\t\t\t</td>\r\n\t\t\t<td  v-else-if = \"step.step_status === 'pending'  \" class = \"data_entry\">\r\n\t\t\t\t<img class = \"data_input\" :src = \"wait\">\r\n\t\t\t<td  v-else class = \"data_entry\">\r\n\t\t\t\t<img class = \"data_input\" :src = \"step.performed_by\">\r\n\t\t\t</td>\r\n\r\n\t\t\t<td class = \"performer_verifier\">\r\n\r\n\t\t\t\t<label><strong>Verified By</strong></label>\r\n\t\t\t</td>\r\n\r\n\t\t\t<td v-if = \"step.step_status === 'performed'\" class = \"data_entry\">\r\n\t\t\t\t<esig  class = \"data_input\" v-on:Singature_IMG = \"verified($event)\"></esig>\r\n\t\t\t</td>\r\n\t\t\t<td  v-else-if = \"step.step_status === 'in-progress' || step.step_status === 'pending'  \" class = \"data_entry\">\r\n\t\t\t\t<img class = \"data_input\" :src = \"wait\">\r\n\t\t\t</td>\r\n\t\t\t<td  v-else class = \"data_entry\">\r\n\t\t\t\t<img class = \"data_input\" :src = \"step.verified_by\">\r\n\t\t\t</td>\r\n\r\n\t\t</tr>\r\n\t\t</table>\r\n\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport esig from './Signature'\r\nimport StepService from '../StepServices';\r\n\r\n\texport default {\r\n\t\tname: 'test',\r\n\t\tprops: ['steps[current_step].performed_by','steps[current_step].verified_by'],\r\n\t\tcomponents: {\r\n\t\t\tesig\r\n\t\t},\r\n\t\tdata(){\r\n\t\t\treturn {\r\n\t\t\t\tbr_selected: false,\r\n\t\t\t\tbatch_record_list: [],\r\n\t\t\t\twait:require('@/assets/Step Symbols/wait.jpg'),\r\n\t\t\t\tstep_symbols: [\r\n\t\t\t\t\trequire('@/assets/Step Symbols/image001.png'),\r\n\t\t\t\t\trequire('@/assets/Step Symbols/wait.jpg')\r\n\r\n\t\t\t\t],\r\n\t\t\t\tstep_symbol: '',\r\n\t\t\t\tcurrent_step: 0,\r\n\t\t\t\tpreview_counter: 0,\r\n\t\t\t\tbatch_record_length: 0,\r\n\t\t\t\tbatch_record: {},\r\n\t\t\t\tstep: {}\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\tasync created(){\r\n\t\ttry{\r\n\t\t\tthis.batch_record_list = await StepService.getBatchRecordList().then( (res) => { return res} );\r\n\t\t}\r\n\tcatch(err){\r\n\t\t\tthis.error = err.message;\r\n\t}\r\n\r\n  },\r\n\r\n\t\tmethods: {\r\n\r\n\t\t\tloadBatchRecord: async function(lot_number){\r\n\r\n\t\t\t\tthis.batch_record = await StepService.getBatchRecord(lot_number);//Get the batch record from the database.\r\n\t\t\t\tthis.step = this.batch_record.steps[this.batch_record.current_step];\r\n\t\t\t\tthis.step_symbol = this.step_symbols[this.step.step_symbol];\r\n\t\t\t\tthis.batch_record_length = this.batch_record.steps.length;\r\n\t\t\t\tthis.br_selected = true;\r\n\r\n\r\n\t\t\t},\r\n\r\n\t\t\tview_previous: function(){\r\n\t\t\t\t\tif(this.batch_record.current_step > 0){\r\n\t\t\t\t\t\tthis.batch_record.current_step = this.batch_record.current_step - 1;\r\n\t\t\t\t\t\tthis.preview_counter = this.preview_counter - 1;\r\n\t\t\t\t\t\tthis.step = this.batch_record.steps[this.batch_record.current_step];\r\n\t\t\t\t\t\tthis.step_symbol = this.step_symbols[this.step.step_symbol];\r\n\t\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tview_next: function(){\r\n\t\t\t\t\t\t\tif(this.batch_record.current_step < this.batch_record.steps.length -1){\r\n\t\t\t\t\t\t\t\tthis.batch_record.current_step = this.batch_record.current_step + 1;\r\n\t\t\t\t\t\t\t\tthis.preview_counter = this.preview_counter +1;\r\n\t\t\t\t\t\t\t\tthis.step = this.batch_record.steps[this.batch_record.current_step];\r\n\t\t\t\t\t\t\t\tthis.step_symbol = this.step_symbols[this.step.step_symbol];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t},\r\n\t\t\treturn_to_current: function(){\r\n\t\t\t\t\t\tthis.batch_record.current_step = this.batch_record.current_step - this.preview_counter;\r\n\t\t\t\t\t\tthis.preview_counter = 0;\r\n\t\t\t\t\t\tthis.step = this.batch_record.steps[this.batch_record.current_step];\r\n\t\t\t\t\t\tthis.step_symbol = this.step_symbols[this.step.step_symbol];\r\n\r\n\t\t\t},\r\n\t\t\tperformed: function(signature){\r\n\t\t\t\t//Need to figure out a way to ensure that the signature is there. Do it in the signature component.\r\n\t\t\t\tif(signature.length > 50){\r\n\t\t\t\t\tthis.step.performed_by = signature;\r\n\t\t\t\t\tthis.step.step_status = 'performed';\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.step.performed_by = null;\r\n\t\t\t\t\tthis.step.step_status = 'in-progress';\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tverified: async function(signature){\r\n\t\t\t\tif(signature.length > 2){\r\n\t\t\t\t\tif(this.batch_record.current_step >= this.batch_record.steps.length - 1){\r\n\t\t\t\t\t\tthis.batch_record.batch_record_status = 'complete'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.step.verified_by =  await signature;\r\n\t\t\t\t\tthis.step.step_status = await 'complete';\r\n\t\t\t\t\tvar batch_record_step = {\r\n\t\t\t\t\t\t\t\t\t\t\tlot_number: this.batch_record.lot_number,\r\n\t\t\t\t\t\t\t\t\t\t\tcurrent_step: this.batch_record.current_step,\r\n\t\t\t\t\t\t\t\t\t\t\tbatch_record_length: this.batch_record_length,\r\n\t\t\t\t\t\t\t\t\t\t\tbatch_record_status: this.batch_record.batch_record_status,\r\n\t\t\t\t\t\t\t\t\t\t\tstep: this.step\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\tawait StepService.updateBR(batch_record_step);\r\n\t\t\t\t\tthis.batch_record = await StepService.getBatchRecord(this.batch_record.lot_number);\r\n\t\t\t\t\tthis.step = this.batch_record.steps[this.batch_record.current_step];\r\n\t\t\t\t\tthis.step_symbol = this.step_symbols[this.step.step_symbol];\r\n\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.steps[this.current_step].verified_by = null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgetURL: function(url){\r\n\t\t\t\tconst a = `this.step_symbol.${url}`;\r\n\r\n\t\t\t\tthis.step_symbol = a;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputed: {\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n</script>\r\n<style scoped>\r\n\r\n\r\n\r\n.container {\r\n\r\n\twidth: 95%;\r\n\tmargin:auto;\r\n\tpadding:1%;\r\n\tborder:2px solid black;\r\n\tbackground-color: White;\r\n\r\n\r\n}\r\n\r\nth {\r\n\r\n\tbackground-color: lightgrey;\r\n\r\n\r\n}\r\ntable, td,th {\r\n\r\n\tborder: 1px solid black;\r\n\tborder-collapse: collapse;\r\n\r\n}\r\n\r\n\r\n/* Operator Navigation */\r\n\r\n.operator_nav{\r\n\r\n\twidth: 95%;\r\n\theight:5%;\r\n\tmargin:auto;\r\n\tborder:2px solid black;\r\n\tbackground-color: White;\r\n\r\n}\r\n\r\n.nav_buttons{\r\n\r\n\twidth:100%;\r\n\theight:100%;\r\n\tborder:2px solid black;\r\n\r\n\r\n}\r\n.nav_button{\r\n\r\n\twidth:100%;\r\n\theight:100%;\r\n\tfont-weight: bold;\r\n\tfont-size:36px;\r\n\tfont-size:2.0vw;\r\n\r\n\r\n}\r\n.nav_button_cell{\r\n\r\n\twidth:33%;\r\n\theight:100%;\r\n\r\n\r\n}\r\n\r\n\r\n/* Header Styling */\r\n.step_header{\r\n\tpadding: 0px;\r\n\tmargin: auto;\r\n\twidth: 100%;\r\n\r\n}\r\n\r\n.header_table{\r\n\twidth: 100%;\r\n\r\n}\r\n\r\n.step_number{\r\n\twidth:10%;\r\n\tbackground-color: White;\r\n\ttext-align: center;\r\n\tfont-weight: bold;\r\n\tfont-size: 20px;\r\n\r\n\r\n}\r\n.step_image{\r\n\twidth:10%;\r\n\ttext-align: center;\r\n\r\n\r\n\r\n}\r\n.step_title{\r\n\twidth:80%;\r\n\tbackground-color: lightgrey;\r\n\ttext-align: center;\r\n\tfont-weight: bold;\r\n\tfont-size: 20px;\r\n}\r\n\r\n/* Instructions */\r\ninstructions{\r\n\ttext-align: left;\r\n\twidth:100%;\r\n}\r\nol{\r\n\tfont-weight: bold;\r\n\r\n}\r\nli p {\r\n\ttext-align: left;\r\n\tline-height: 1.5em;\r\n\ttext-indent: 0.5em;\r\n\tfont-weight: normal;\r\n}\r\n\r\n/*\r\nol {\r\n  margin: 0 0 0;\r\n  padding: 1.5em;\r\n  counter-reset: item;\r\n}\r\n\r\nol > li {\r\n  margin: 0;\r\n  padding: 0 0 0 ;\r\n  text-indent: -2em;\r\n  list-style-type: none;\r\n  counter-increment: item;\r\n}\r\n\r\nol > li:before {\r\n  display: inline-block;\r\n  width: 1em;\r\n  padding-right: 0.5em;\r\n  font-weight: bold;\r\n  text-align: left;\r\n  content: counter(item) \".\";\r\n}*/\r\n/*Data Table*/\r\n\r\n.step_data{\r\n\twidth: 100%;\r\n\r\n}\r\n\r\n.data_table{\r\n\twidth: 80%;\r\n\r\n\r\n}\r\n\r\n\r\n.data_description{\r\n\r\n\tbackground-color: lightgrey;\r\n\tfont-weight: bold;\r\n\r\n\r\n}\r\n\r\n.data_entry{\r\n\tmargin: 0px;\r\n\tpadding: 5px;\r\n\tbackground-color:black;\r\n\r\n}\r\n.data_input{\r\n\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\r\n}\r\n\r\n/*Performed By and Verified By */\r\n\r\n.sign_off{\r\n\twidth: 100%;\r\n\tborder:2px solid black;\r\n\r\n}\r\n\r\n.sign_off td{\r\n\twidth: 20%;\r\n\tborder:2px solid black;\r\n\r\n}\r\n\r\n.signatures{\r\n\tmargin:0px;\r\n\twidth: 100%;\r\n\theight: 20%;\r\n}\r\n\r\n.performer_verifier{\r\n\r\n\tbackground-color: lightgrey;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n\r\n}\r\n\r\n</style>\r\n"],"sourceRoot":"src/components"}]}