{"remainingRequest":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\src\\components\\BatchRecord.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\src\\components\\BatchRecord.vue","mtime":1559104265671},{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Computer\\\\Desktop\\\\Programming Work\\\\FULLSTACK_VUE_EXPRESS\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport StepService from \"../StepServices\";\nexport default {\n  name: 'BRComponent',\n  data: function data() {\n    return {\n      posts: [],\n      error: '',\n      text: ''\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return StepService.getBatchRecord();\n\n            case 3:\n              this.posts = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              this.error = _context.t0.message;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 6]]);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    createPost: function () {\n      var _createPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return StepService.insertPost(this.text);\n\n              case 2:\n                _context2.next = 4;\n                return StepService.getBatchRecord();\n\n              case 4:\n                this.posts = _context2.sent;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createPost() {\n        return _createPost.apply(this, arguments);\n      }\n\n      return createPost;\n    }(),\n    deletePost: function () {\n      var _deletePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(id) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return StepService.deletePost(id);\n\n              case 2:\n                _context3.next = 4;\n                return StepService.getBatchRecord();\n\n              case 4:\n                this.posts = _context3.sent;\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function deletePost(_x) {\n        return _deletePost.apply(this, arguments);\n      }\n\n      return deletePost;\n    }()\n  }\n};",{"version":3,"sources":["BatchRecord.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAOA,GAVA;AAWA,EAAA,OAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAcA,WAAA,CAAA,cAAA,EAdA;;AAAA;AAcA,mBAAA,KAdA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBA,mBAAA,KAAA,GAAA,YAAA,OAAA;;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,WAAA,CAAA,UAAA,CAAA,KAAA,IAAA,CAFA;;AAAA;AAAA;AAAA,uBAGA,WAAA,CAAA,cAAA,EAHA;;AAAA;AAGA,qBAAA,KAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAKA,IAAA,UALA;AAAA;AAAA;AAAA,gDAKA,EALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMA,WAAA,CAAA,UAAA,CAAA,EAAA,CANA;;AAAA;AAAA;AAAA,uBAOA,WAAA,CAAA,cAAA,EAPA;;AAAA;AAOA,qBAAA,KAPA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAvBA,CAAA","sourcesContent":["<template>\n  <div class = 'container'>\n\n<!--\n  <h1>Latest Posts</h1>\n\t<div class=\"create-post\">\n\t\t<label for=\"create-post\"> Say Something </label>\n\t\t<input type=\"text\"  id = \"create-post\"  v-model=\"text\" placeholder = \"Create A Post\">\n\t<button v-on:click=\"createPost\">Post</button>\n\t</div>\n\t<hr>\n\t<div class = 'post-container'>\n\t\t<div class = 'post'\n\t\tv-for=\"(post,index) in posts\"\n\t\tv-bind:item = \"post\"\n\t\tv-bind:index= \"index\"\n\t\tv-bind:key= \"post.id\"\n\t\tv-on:dblclick=\"deletePost(post._id)\"\n\t\t>\n\t\t{{`${post.createdAt.getDate()}/${post.createdAt.getMonth()}/${post.createdAt.getFullYear()}`}}\n\t\t<p class=\"text\">{{post.text}}</p>\t\n\t\t</div>\t\n\t\n\t</div>-->\n\t{{posts}}\n  </div>\n</template>\n\n<script>\nimport StepService from '../StepServices';\n\nexport default {\n  name: 'BRComponent',\n  data(){\n\treturn{\n\t posts: [],\n\t error: '',\n\t text: ''\n\t \n\t}\n  \n  },\n  async created(){\n\ttry{\n\t\t\n\t\tthis.posts = await StepService.getBatchRecord()\n\t\n\t}\n\tcatch(err){\n\t\tthis.error = err.message;\n\t}\n  \n  },\n  \n  methods: {\n\tasync createPost(){\n\t\tawait StepService.insertPost(this.text);\n\t\tthis.posts = await StepService.getBatchRecord()\n\t},\n\tasync deletePost(id){\n\t\tawait StepService.deletePost(id);\n\t\tthis.posts = await StepService.getBatchRecord()\n\t}\n  \n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.post-container{\n\tborder: 1px solid black;\n}\n.post{\n\tborder: 1px solid black;\n}\n</style>\n"],"sourceRoot":"src/components"}]}