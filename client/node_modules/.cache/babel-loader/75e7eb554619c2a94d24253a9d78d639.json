{"remainingRequest":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\src\\StepServices.js","dependencies":[{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\src\\StepServices.js","mtime":1560219989127},{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Computer\\\\Desktop\\\\Programming Work\\\\FULLSTACK_VUE_EXPRESS\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Computer\\\\Desktop\\\\Programming Work\\\\FULLSTACK_VUE_EXPRESS\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Computer\\\\Desktop\\\\Programming Work\\\\FULLSTACK_VUE_EXPRESS\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\nvar url = 'api/batch_records/';\n\nvar StepService =\n/*#__PURE__*/\nfunction () {\n  function StepService() {\n    _classCallCheck(this, StepService);\n  }\n\n  _createClass(StepService, null, [{\n    key: \"getBatchRecord\",\n    //Get Posts\n    value: function getBatchRecord(lot_number) {\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(resolve, reject) {\n          var res, data;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return axios.get(url, {\n                    params: {\n                      lot_number: lot_number\n                    }\n                  });\n\n                case 3:\n                  res = _context.sent;\n                  data = res.data;\n                  resolve(data);\n                  _context.next = 11;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](0);\n                  reject(_context.t0);\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 8]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    } //Update Batch Record\n\n  }, {\n    key: \"updateBR\",\n    value: function updateBR(batch_record_step) {\n      return axios.post(\"\".concat(url, \"updateBR\"), {\n        batch_record_step: batch_record_step\n      });\n    } //Get batch record templates\n\n  }, {\n    key: \"getBatchRecordTemplates\",\n    value: function getBatchRecordTemplates() {\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(resolve, reject) {\n          var res, data;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return axios.get(\"\".concat(url, \"all\"));\n\n                case 3:\n                  res = _context2.sent;\n                  data = res.data;\n                  resolve(data);\n                  _context2.next = 11;\n                  break;\n\n                case 8:\n                  _context2.prev = 8;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  reject(_context2.t0);\n\n                case 11:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 8]]);\n        }));\n\n        return function (_x3, _x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    } //Create Post\n\n  }, {\n    key: \"insertPost\",\n    value: function insertPost(text) {\n      return axios.post(url, {\n        text: text\n      });\n    } //Delete Post\n\n  }, {\n    key: \"deletePost\",\n    value: function deletePost(id) {\n      return axios.delete(\"\".concat(url).concat(id));\n    }\n  }]);\n\n  return StepService;\n}();\n\nexport default StepService;",{"version":3,"sources":["C:\\Users\\Computer\\Desktop\\Programming Work\\FULLSTACK_VUE_EXPRESS\\client\\src\\StepServices.js"],"names":["axios","url","StepService","lot_number","Promise","resolve","reject","get","params","res","data","batch_record_step","post","text","id","delete"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAG,oBAAZ;;IAEMC,W;;;;;;;;;AACL;mCAEsBC,U,EAAW;AAEhC,aAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAECN,KAAK,CAACO,GAAN,CAAUN,GAAV,EAAc;AAC9BO,oBAAAA,MAAM,EAAE;AACPL,sBAAAA,UAAU,EAAEA;AADL;AADsB,mBAAd,CAFD;;AAAA;AAEXM,kBAAAA,GAFW;AAOXC,kBAAAA,IAPW,GAOJD,GAAG,CAACC,IAPA;AAQjBL,kBAAAA,OAAO,CACNK,IADM,CAAP;AARiB;AAAA;;AAAA;AAAA;AAAA;AAYjBJ,kBAAAA,MAAM,aAAN;;AAZiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAgBA,K,CAED;;;;6BACgBK,iB,EAAkB;AACjC,aAAOX,KAAK,CAACY,IAAN,WAAcX,GAAd,eAA4B;AAClCU,QAAAA,iBAAiB,EAAjBA;AADkC,OAA5B,CAAP;AAIA,K,CAED;;;;8CACgC;AAC/B,aAAO,IAAIP,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,kBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAECN,KAAK,CAACO,GAAN,WAAaN,GAAb,SAFD;;AAAA;AAEXQ,kBAAAA,GAFW;AAGXC,kBAAAA,IAHW,GAGJD,GAAG,CAACC,IAHA;AAIjBL,kBAAAA,OAAO,CACNK,IADM,CAAP;AAJiB;AAAA;;AAAA;AAAA;AAAA;AAQjBJ,kBAAAA,MAAM,cAAN;;AARiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAaA,K,CAED;;;;+BACkBO,I,EAAK;AACtB,aAAOb,KAAK,CAACY,IAAN,CAAWX,GAAX,EAAe;AACrBY,QAAAA,IAAI,EAAJA;AADqB,OAAf,CAAP;AAGA,K,CAID;;;;+BACkBC,E,EAAG;AACpB,aAAOd,KAAK,CAACe,MAAN,WAAgBd,GAAhB,SAAsBa,EAAtB,EAAP;AACA;;;;;;AAKF,eAAeZ,WAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'api/batch_records/';\r\n\r\nclass StepService{\r\n\t//Get Posts\r\n\t\r\n\tstatic getBatchRecord(lot_number){\r\n\t\t\r\n\t\treturn new Promise(async (resolve, reject) =>{\r\n\t\t\ttry{\r\n\t\t\t\tconst res = await axios.get(url,{\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\tlot_number: lot_number\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\tconst data = res.data;\r\n\t\t\t\tresolve(\r\n\t\t\t\t\tdata\r\n\t\t\t\t\t);\r\n\t\t\t}catch(err){\r\n\t\t\t\treject(err);\t\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t}\r\n\t\r\n\t//Update Batch Record\r\n\tstatic updateBR(batch_record_step){\r\n\t\treturn axios.post(`${url}updateBR`,{\r\n\t\t\tbatch_record_step\r\n\t\t});\r\n\t\t\t\r\n\t}\r\n\t\r\n\t//Get batch record templates\r\n\tstatic getBatchRecordTemplates(){\r\n\t\treturn new Promise(async (resolve, reject) =>{\r\n\t\t\ttry{\r\n\t\t\t\tconst res = await axios.get(`${url}all` );\r\n\t\t\t\tconst data = res.data;\r\n\t\t\t\tresolve(\r\n\t\t\t\t\tdata\r\n\t\t\t\t\t);\r\n\t\t\t}catch(err){\r\n\t\t\t\treject(err);\t\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t//Create Post\r\n\tstatic insertPost(text){\r\n\t\treturn axios.post(url,{\r\n\t\t\ttext\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t//Delete Post\r\n\tstatic deletePost(id){\r\n\t\treturn axios.delete(`${url}${id}`);\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\nexport default StepService;\r\n"]}]}